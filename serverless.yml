service: thumbnail-gen-dynamodb

frameworkVersion: '3'

provider:
  name: aws
  runtime: python3.9
  region: us-east-1
  profile: serverless-admin
  stage: dev
  timeout: 10
  memorySize: 128
  environment:
    THUMBNAIL_SIZE: 128
    REGION_NAME: ${self:provider.region}
    DYNAMODB_TABLE: ${self:custom.dynamoTable}

  iam:
    role:
      statements:
        - Effect: 'Allow'
          Resource: '*'
          Action: 's3:*'
        - Effect: 'Allow'
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:custom.dynamoTable}"        

custom:
  bucket: BUCKET NAME
  dynamoTable: TABLE NAME
  pythonRequirements:
    dockerizePip: true

functions:
  s3_thumbnail_generator:
    handler: handler.s3_thumbnail_generator
    layers:
      - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-p39-pillow:1
    events:
    - s3:
        bucket: ${self:custom.bucket}
        event: s3:ObjectCreated:*
        rules:
          - suffix: .png
  list:
    handler: handler.s3_get_thumbnail_urls
    layers:
      - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-p39-pillow:1
    events:
      - http:
          path: images/all
          method: get
          cors: true
  get:
    handler: handler.s3_get_item
    layers:
      - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-p39-pillow:1
    events:
      - http:
          path: images/get/{id}
          method: get
          cors: true
  delete:
    handler: handler.s3_delete_item
    layers:
      - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-p39-pillow:1
    events:
      - http:
          path: images/delete/{id}
          method: delete
          cors: true


resources:
  Resources:
    ImagesDynamoDbTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.dynamoTable}
        
plugins:
  - serverless-python-requirements

